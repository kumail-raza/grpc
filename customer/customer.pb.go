// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer/customer.proto

package customer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Id struct {
	Id                   *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_5944753a1723a19d, []int{0}
}
func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (dst *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(dst, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type CustomerProto struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address              *string  `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Email                *string  `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerProto) Reset()         { *m = CustomerProto{} }
func (m *CustomerProto) String() string { return proto.CompactTextString(m) }
func (*CustomerProto) ProtoMessage()    {}
func (*CustomerProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_5944753a1723a19d, []int{1}
}
func (m *CustomerProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerProto.Unmarshal(m, b)
}
func (m *CustomerProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerProto.Marshal(b, m, deterministic)
}
func (dst *CustomerProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerProto.Merge(dst, src)
}
func (m *CustomerProto) XXX_Size() int {
	return xxx_messageInfo_CustomerProto.Size(m)
}
func (m *CustomerProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerProto.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerProto proto.InternalMessageInfo

func (m *CustomerProto) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CustomerProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CustomerProto) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *CustomerProto) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type NothingFancy struct {
	Toldyou              *string  `protobuf:"bytes,1,opt,name=toldyou" json:"toldyou,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NothingFancy) Reset()         { *m = NothingFancy{} }
func (m *NothingFancy) String() string { return proto.CompactTextString(m) }
func (*NothingFancy) ProtoMessage()    {}
func (*NothingFancy) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_5944753a1723a19d, []int{2}
}
func (m *NothingFancy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NothingFancy.Unmarshal(m, b)
}
func (m *NothingFancy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NothingFancy.Marshal(b, m, deterministic)
}
func (dst *NothingFancy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NothingFancy.Merge(dst, src)
}
func (m *NothingFancy) XXX_Size() int {
	return xxx_messageInfo_NothingFancy.Size(m)
}
func (m *NothingFancy) XXX_DiscardUnknown() {
	xxx_messageInfo_NothingFancy.DiscardUnknown(m)
}

var xxx_messageInfo_NothingFancy proto.InternalMessageInfo

func (m *NothingFancy) GetToldyou() string {
	if m != nil && m.Toldyou != nil {
		return *m.Toldyou
	}
	return ""
}

type CustomersProto struct {
	Customers            []*CustomerProto `protobuf:"bytes,1,rep,name=customers" json:"customers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CustomersProto) Reset()         { *m = CustomersProto{} }
func (m *CustomersProto) String() string { return proto.CompactTextString(m) }
func (*CustomersProto) ProtoMessage()    {}
func (*CustomersProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_5944753a1723a19d, []int{3}
}
func (m *CustomersProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomersProto.Unmarshal(m, b)
}
func (m *CustomersProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomersProto.Marshal(b, m, deterministic)
}
func (dst *CustomersProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomersProto.Merge(dst, src)
}
func (m *CustomersProto) XXX_Size() int {
	return xxx_messageInfo_CustomersProto.Size(m)
}
func (m *CustomersProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomersProto.DiscardUnknown(m)
}

var xxx_messageInfo_CustomersProto proto.InternalMessageInfo

func (m *CustomersProto) GetCustomers() []*CustomerProto {
	if m != nil {
		return m.Customers
	}
	return nil
}

func init() {
	proto.RegisterType((*Id)(nil), "customer.Id")
	proto.RegisterType((*CustomerProto)(nil), "customer.CustomerProto")
	proto.RegisterType((*NothingFancy)(nil), "customer.NothingFancy")
	proto.RegisterType((*CustomersProto)(nil), "customer.CustomersProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerClient is the client API for Customer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerClient interface {
	GetCustomer(ctx context.Context, in *Id, opts ...grpc.CallOption) (*CustomerProto, error)
	CreateCustomer(ctx context.Context, in *CustomerProto, opts ...grpc.CallOption) (*Id, error)
	GetAllCustomers(ctx context.Context, in *NothingFancy, opts ...grpc.CallOption) (*CustomersProto, error)
}

type customerClient struct {
	cc *grpc.ClientConn
}

func NewCustomerClient(cc *grpc.ClientConn) CustomerClient {
	return &customerClient{cc}
}

func (c *customerClient) GetCustomer(ctx context.Context, in *Id, opts ...grpc.CallOption) (*CustomerProto, error) {
	out := new(CustomerProto)
	err := c.cc.Invoke(ctx, "/customer.Customer/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) CreateCustomer(ctx context.Context, in *CustomerProto, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/customer.Customer/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) GetAllCustomers(ctx context.Context, in *NothingFancy, opts ...grpc.CallOption) (*CustomersProto, error) {
	out := new(CustomersProto)
	err := c.cc.Invoke(ctx, "/customer.Customer/GetAllCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServer is the server API for Customer service.
type CustomerServer interface {
	GetCustomer(context.Context, *Id) (*CustomerProto, error)
	CreateCustomer(context.Context, *CustomerProto) (*Id, error)
	GetAllCustomers(context.Context, *NothingFancy) (*CustomersProto, error)
}

func RegisterCustomerServer(s *grpc.Server, srv CustomerServer) {
	s.RegisterService(&_Customer_serviceDesc, srv)
}

func _Customer_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Customer/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).GetCustomer(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Customer/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CreateCustomer(ctx, req.(*CustomerProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_GetAllCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NothingFancy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).GetAllCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Customer/GetAllCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).GetAllCustomers(ctx, req.(*NothingFancy))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.Customer",
	HandlerType: (*CustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCustomer",
			Handler:    _Customer_GetCustomer_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _Customer_CreateCustomer_Handler,
		},
		{
			MethodName: "GetAllCustomers",
			Handler:    _Customer_GetAllCustomers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer/customer.proto",
}

func init() { proto.RegisterFile("customer/customer.proto", fileDescriptor_customer_5944753a1723a19d) }

var fileDescriptor_customer_5944753a1723a19d = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2e, 0x2d, 0x2e,
	0xc9, 0xcf, 0x4d, 0x2d, 0xd2, 0x87, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x7c, 0x25, 0x01, 0x2e, 0x26, 0xcf, 0x14, 0x21, 0x2e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05,
	0x26, 0x0d, 0x4e, 0x25, 0x4f, 0x2e, 0x5e, 0x67, 0xa8, 0x6c, 0x00, 0x58, 0x31, 0x4c, 0x92, 0x51,
	0x83, 0x53, 0x88, 0x87, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x09, 0xcc, 0xe3, 0xe7, 0x62,
	0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x06, 0x0b, 0xf0, 0x72, 0xb1, 0xa6, 0xe6,
	0x26, 0x66, 0xe6, 0x48, 0xb0, 0x80, 0xb8, 0x4a, 0xf2, 0x5c, 0x3c, 0x7e, 0xf9, 0x25, 0x19, 0x99,
	0x79, 0xe9, 0x6e, 0x89, 0x79, 0xc9, 0x95, 0x20, 0xf5, 0x25, 0xf9, 0x39, 0x29, 0x95, 0xf9, 0xa5,
	0x10, 0xe3, 0x94, 0x6c, 0xb8, 0xf8, 0x60, 0x76, 0x15, 0x43, 0x2c, 0xd3, 0xe2, 0xe2, 0x84, 0xb9,
	0xad, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x5c, 0x0f, 0xee, 0x7a, 0x14, 0x87, 0x19,
	0xed, 0x63, 0xe4, 0xe2, 0x80, 0x89, 0x08, 0x99, 0x70, 0x71, 0xbb, 0xa7, 0x96, 0xc0, 0xb9, 0x3c,
	0x08, 0x4d, 0x9e, 0x29, 0x52, 0xb8, 0x8c, 0x10, 0x32, 0xe7, 0xe2, 0x73, 0x2e, 0x4a, 0x4d, 0x2c,
	0x49, 0x85, 0x6b, 0xc4, 0xa5, 0x54, 0x0a, 0xc5, 0x44, 0x21, 0x67, 0x2e, 0x7e, 0xf7, 0xd4, 0x12,
	0xc7, 0x9c, 0x1c, 0xb8, 0xfb, 0x85, 0xc4, 0x10, 0x0a, 0x90, 0x7d, 0x2d, 0x25, 0x81, 0x69, 0x22,
	0xc4, 0xb3, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x48, 0x82, 0xb4, 0xc8, 0xa0, 0x01, 0x00, 0x00,
}
