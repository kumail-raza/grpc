// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order/order.proto

package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Id struct {
	Id                   *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{0}
}
func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (dst *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(dst, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type OrderProto struct {
	Id                   *string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address              *string         `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	CustomerId           *string         `protobuf:"bytes,4,opt,name=customerId" json:"customerId,omitempty"`
	Customers            *CustomersProto `protobuf:"bytes,5,opt,name=customers" json:"customers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrderProto) Reset()         { *m = OrderProto{} }
func (m *OrderProto) String() string { return proto.CompactTextString(m) }
func (*OrderProto) ProtoMessage()    {}
func (*OrderProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{1}
}
func (m *OrderProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderProto.Unmarshal(m, b)
}
func (m *OrderProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderProto.Marshal(b, m, deterministic)
}
func (dst *OrderProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderProto.Merge(dst, src)
}
func (m *OrderProto) XXX_Size() int {
	return xxx_messageInfo_OrderProto.Size(m)
}
func (m *OrderProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderProto.DiscardUnknown(m)
}

var xxx_messageInfo_OrderProto proto.InternalMessageInfo

func (m *OrderProto) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *OrderProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *OrderProto) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *OrderProto) GetCustomerId() string {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return ""
}

func (m *OrderProto) GetCustomers() *CustomersProto {
	if m != nil {
		return m.Customers
	}
	return nil
}

type CustomerProto struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address              *string  `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Email                *string  `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerProto) Reset()         { *m = CustomerProto{} }
func (m *CustomerProto) String() string { return proto.CompactTextString(m) }
func (*CustomerProto) ProtoMessage()    {}
func (*CustomerProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{2}
}
func (m *CustomerProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerProto.Unmarshal(m, b)
}
func (m *CustomerProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerProto.Marshal(b, m, deterministic)
}
func (dst *CustomerProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerProto.Merge(dst, src)
}
func (m *CustomerProto) XXX_Size() int {
	return xxx_messageInfo_CustomerProto.Size(m)
}
func (m *CustomerProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerProto.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerProto proto.InternalMessageInfo

func (m *CustomerProto) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CustomerProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CustomerProto) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *CustomerProto) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type CustomersProto struct {
	Customers            []*CustomerProto `protobuf:"bytes,1,rep,name=customers" json:"customers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CustomersProto) Reset()         { *m = CustomersProto{} }
func (m *CustomersProto) String() string { return proto.CompactTextString(m) }
func (*CustomersProto) ProtoMessage()    {}
func (*CustomersProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{3}
}
func (m *CustomersProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomersProto.Unmarshal(m, b)
}
func (m *CustomersProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomersProto.Marshal(b, m, deterministic)
}
func (dst *CustomersProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomersProto.Merge(dst, src)
}
func (m *CustomersProto) XXX_Size() int {
	return xxx_messageInfo_CustomersProto.Size(m)
}
func (m *CustomersProto) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomersProto.DiscardUnknown(m)
}

var xxx_messageInfo_CustomersProto proto.InternalMessageInfo

func (m *CustomersProto) GetCustomers() []*CustomerProto {
	if m != nil {
		return m.Customers
	}
	return nil
}

type Noop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Noop) Reset()         { *m = Noop{} }
func (m *Noop) String() string { return proto.CompactTextString(m) }
func (*Noop) ProtoMessage()    {}
func (*Noop) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{4}
}
func (m *Noop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Noop.Unmarshal(m, b)
}
func (m *Noop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Noop.Marshal(b, m, deterministic)
}
func (dst *Noop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Noop.Merge(dst, src)
}
func (m *Noop) XXX_Size() int {
	return xxx_messageInfo_Noop.Size(m)
}
func (m *Noop) XXX_DiscardUnknown() {
	xxx_messageInfo_Noop.DiscardUnknown(m)
}

var xxx_messageInfo_Noop proto.InternalMessageInfo

type OrdersProto struct {
	Orders               []*OrderProto `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrdersProto) Reset()         { *m = OrdersProto{} }
func (m *OrdersProto) String() string { return proto.CompactTextString(m) }
func (*OrdersProto) ProtoMessage()    {}
func (*OrdersProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_b5b51575b8f94cb7, []int{5}
}
func (m *OrdersProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersProto.Unmarshal(m, b)
}
func (m *OrdersProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersProto.Marshal(b, m, deterministic)
}
func (dst *OrdersProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersProto.Merge(dst, src)
}
func (m *OrdersProto) XXX_Size() int {
	return xxx_messageInfo_OrdersProto.Size(m)
}
func (m *OrdersProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersProto.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersProto proto.InternalMessageInfo

func (m *OrdersProto) GetOrders() []*OrderProto {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*Id)(nil), "order.Id")
	proto.RegisterType((*OrderProto)(nil), "order.OrderProto")
	proto.RegisterType((*CustomerProto)(nil), "order.CustomerProto")
	proto.RegisterType((*CustomersProto)(nil), "order.CustomersProto")
	proto.RegisterType((*Noop)(nil), "order.Noop")
	proto.RegisterType((*OrdersProto)(nil), "order.OrdersProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	GetOrder(ctx context.Context, in *Id, opts ...grpc.CallOption) (*OrderProto, error)
	CreateOrder(ctx context.Context, in *OrderProto, opts ...grpc.CallOption) (*Id, error)
	GetAllOrders(ctx context.Context, in *Noop, opts ...grpc.CallOption) (*OrdersProto, error)
}

type orderClient struct {
	cc *grpc.ClientConn
}

func NewOrderClient(cc *grpc.ClientConn) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) GetOrder(ctx context.Context, in *Id, opts ...grpc.CallOption) (*OrderProto, error) {
	out := new(OrderProto)
	err := c.cc.Invoke(ctx, "/order.Order/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CreateOrder(ctx context.Context, in *OrderProto, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/order.Order/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) GetAllOrders(ctx context.Context, in *Noop, opts ...grpc.CallOption) (*OrdersProto, error) {
	out := new(OrdersProto)
	err := c.cc.Invoke(ctx, "/order.Order/GetAllOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	GetOrder(context.Context, *Id) (*OrderProto, error)
	CreateOrder(context.Context, *OrderProto) (*Id, error)
	GetAllOrders(context.Context, *Noop) (*OrdersProto, error)
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetOrder(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).CreateOrder(ctx, req.(*OrderProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_GetAllOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Noop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetAllOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/GetAllOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetAllOrders(ctx, req.(*Noop))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrder",
			Handler:    _Order_GetOrder_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _Order_CreateOrder_Handler,
		},
		{
			MethodName: "GetAllOrders",
			Handler:    _Order_GetAllOrders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/order.proto",
}

func init() { proto.RegisterFile("order/order.proto", fileDescriptor_order_b5b51575b8f94cb7) }

var fileDescriptor_order_b5b51575b8f94cb7 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x9a, 0x54, 0xf3, 0xd2, 0xaa, 0x1d, 0x14, 0x42, 0x4e, 0x71, 0x2f, 0x2e, 0x08,
	0xad, 0xe4, 0xe6, 0x51, 0x7a, 0x28, 0xb9, 0xa8, 0x7f, 0x21, 0xb8, 0x7b, 0x28, 0x24, 0x6e, 0xd9,
	0x6c, 0x7f, 0x87, 0x7f, 0x59, 0x3a, 0x9b, 0xa5, 0xd5, 0x9e, 0x7a, 0x09, 0x99, 0x37, 0xef, 0xed,
	0xfb, 0x18, 0x2c, 0x8c, 0x55, 0xda, 0xae, 0xf8, 0xbb, 0xdc, 0x59, 0xe3, 0x0c, 0xa5, 0x3c, 0x88,
	0x3b, 0xc4, 0x8d, 0x22, 0x20, 0xde, 0xaa, 0x22, 0xaa, 0x62, 0x99, 0x89, 0x3d, 0xf0, 0x71, 0x58,
	0x7d, 0xb2, 0x2d, 0x6c, 0x22, 0x99, 0xd1, 0x0c, 0xc9, 0x77, 0xdb, 0xeb, 0x22, 0xe6, 0xe9, 0x16,
	0x57, 0xad, 0x52, 0x56, 0x0f, 0x43, 0x31, 0x61, 0x81, 0x80, 0xaf, 0xfd, 0xe0, 0x4c, 0xaf, 0x6d,
	0xa3, 0x8a, 0x84, 0x35, 0x89, 0x2c, 0x68, 0x43, 0x91, 0x56, 0x91, 0xcc, 0xeb, 0x87, 0xa5, 0xc7,
	0x58, 0x07, 0x9d, 0x8b, 0x44, 0x83, 0x79, 0x50, 0x2e, 0x6e, 0x9e, 0x23, 0xd5, 0x7d, 0xbb, 0xed,
	0x7c, 0xa9, 0x78, 0xc5, 0xcd, 0xdf, 0xc7, 0xe9, 0xe9, 0x14, 0x23, 0xaa, 0x26, 0x32, 0xaf, 0xef,
	0xff, 0x61, 0x78, 0x8a, 0x29, 0x92, 0x77, 0x63, 0x76, 0xe2, 0x05, 0x39, 0x1f, 0x61, 0xcc, 0x3f,
	0x62, 0xca, 0xee, 0x10, 0x5e, 0x8c, 0xe1, 0xe3, 0xa1, 0xea, 0x9f, 0x08, 0x29, 0x8f, 0x24, 0x71,
	0xbd, 0xd1, 0xce, 0xff, 0x67, 0xa3, 0xb1, 0x51, 0xe5, 0x79, 0x86, 0x9e, 0x91, 0xaf, 0xad, 0x6e,
	0x9d, 0xf6, 0xe6, 0x73, 0x47, 0x79, 0xcc, 0xd3, 0x0a, 0xb3, 0x8d, 0x76, 0x6f, 0x5d, 0xe7, 0xc1,
	0x28, 0x1f, 0x57, 0x07, 0xde, 0x92, 0x4e, 0xa3, 0x1e, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x2f,
	0x57, 0xc6, 0x31, 0xf5, 0x01, 0x00, 0x00,
}
